package com.feedback.controller;import com.common.model.PageData;import com.common.response.ResponseResult;import com.feedback.core.base.BaseController;import com.feedback.core.base.BaseService;import com.feedback.domain.output.FeedbackInfoOutput;import com.feedback.model.FeedbackInfo;import com.feedback.service.DeptSatisfactionService;import com.github.pagehelper.Page;import io.swagger.annotations.Api;import io.swagger.annotations.ApiImplicitParam;import io.swagger.annotations.ApiImplicitParams;import io.swagger.annotations.ApiOperation;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.RestController;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.text.SimpleDateFormat;import java.util.Calendar;import java.util.Date;import java.util.List;/** * @author: XiGuoQing */@RestController@RequestMapping(value = "/deptSatisfaction")@Api(value = "部门满意率统计controller",description = "部门满意率统计报表操作",tags = {"部门满意率统计报表操作接口"})public class DeptSatisfactionController extends BaseController<FeedbackInfoOutput, FeedbackInfo,Integer> {  @Autowired  private DeptSatisfactionService deptSatisfactionService;  @Override  public BaseService<FeedbackInfoOutput, FeedbackInfo, Integer> getService() {    return deptSatisfactionService;  }  /**   * 获取分页的部门满意度报表   */  @GetMapping(value = "/findDeptSatisfaction")  @ApiOperation("获取分页的部门满意度报表")  @ApiImplicitParams({     @ApiImplicitParam(name="organizationId",value="组织机构id",required=false,dataType="Integer", paramType = "query"),     @ApiImplicitParam(name="startTime",value="统计开始时间",required=false,dataType="String", paramType = "query"),     @ApiImplicitParam(name="endTime",value="统计结束时间",required=false,dataType="String", paramType = "query")})  public ResponseResult findDeptSatisfaction(HttpServletRequest request) throws Exception {    PageData pageData = new PageData(request);    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");    try{      Calendar calendar = Calendar.getInstance();      String startTime = pageData.getMap().get("startTime");      String endTime = pageData.getMap().get("endTime");      calendar.setTime(sdf.parse(endTime));      calendar.add(Calendar.DATE,1);      endTime = sdf.format(calendar.getTime());      pageData.put("startTime",startTime);      pageData.put("endTime",endTime);      if(pageData.getMap().get("organizationId")!=null&&!pageData.getMap().get("organizationId").equals("")){        String  s=deptSatisfactionService.getPathById(Integer.parseInt(pageData.getMap().get("organizationId")));        pageData.put("path",s+",");      }    }catch (Exception e){      e.printStackTrace();    }    return ResponseResult.success(deptSatisfactionService.getDeptSatisfaction(pageData));  }  /**   * 导出部门满意度报表   *   * @param   * @return   */  @ApiOperation("导出部门满意度报表")  @GetMapping(value = "/deptSatisfactionReportExport")  @ApiImplicitParams({     @ApiImplicitParam(name="organizationId",value="组织机构id",required=false,dataType="string", paramType = "query"),     @ApiImplicitParam(name="year",value="年",required=false,dataType="int", paramType = "query"),     @ApiImplicitParam(name="month",value="月",required=false,dataType="int", paramType = "query")})  public ResponseResult export(HttpServletResponse response, HttpServletRequest request) {    PageData pageData = new PageData(request);    try {      String str = deptSatisfactionService.deptSatisfactionReportExport(response,request);      return  ResponseResult.success(str);    } catch (Exception e) {      e.printStackTrace();    }    return null;  }  /**查询不满意*/  @GetMapping(value = "/selectUnstatis")  public ResponseResult selectUnstatis(HttpServletRequest request){    PageData pageData = new PageData(request);    List<FeedbackInfoOutput> feedbackInfoOutputs = deptSatisfactionService.selectUnstatis(pageData);    return ResponseResult.success(feedbackInfoOutputs);  }}