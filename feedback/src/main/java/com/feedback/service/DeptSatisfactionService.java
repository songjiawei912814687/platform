package com.feedback.service;import com.common.model.PageData;import com.common.utils.ExportExcel;import com.feedback.core.base.BaseMapper;import com.feedback.core.base.BaseService;import com.feedback.core.base.MybatisBaseMapper;import com.feedback.domain.output.DeptSatisfactionOutput;import com.feedback.domain.output.FeedbackInfoOutput;import com.feedback.mapper.mybatis.FeedbackInfoMapper;import com.feedback.model.FeedbackInfo;import com.google.common.collect.Lists;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.text.NumberFormat;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.List;import java.util.TreeSet;import static java.util.Comparator.comparing;import static java.util.stream.Collectors.collectingAndThen;import static java.util.stream.Collectors.toCollection;/** * @author: XiGuoQing */@Servicepublic class DeptSatisfactionService extends BaseService<FeedbackInfoOutput, FeedbackInfo,Integer> {  @Autowired  private FeedbackInfoMapper feedbackInfoMapper;  @Override  public BaseMapper<FeedbackInfo, Integer> getMapper() {    return null;  }  @Override  public MybatisBaseMapper<FeedbackInfoOutput> getMybatisBaseMapper() {    return feedbackInfoMapper;  }  //  public String getPathById(int id) {    return feedbackInfoMapper.selectPathById(id);  }  //部门满意度统计  public List<DeptSatisfactionOutput> getDeptSatisfaction(PageData pageData){    pageData.put("userId",getUsers().getId().toString());    if(getUsers().getAdministratorLevel()!=9){      if(getUsers().getUserType()==0){        pageData.put("employeesNo",getUsers().getUsername());      }else {        pageData.put("orgId",getUsers().getOrganizationId().toString());      }    }    List<FeedbackInfoOutput> list = feedbackInfoMapper.selectSum1(pageData);    List<DeptSatisfactionOutput> deptSatisfactionOutputList =new ArrayList<>();    if(list != null && list.size()>0){      for (FeedbackInfoOutput feedbackInfoOutput:list) {        DeptSatisfactionOutput deptSatisfactionOutput = new DeptSatisfactionOutput();        deptSatisfactionOutput.setOrganizationName(feedbackInfoOutput.getOrganizationName());//部门        deptSatisfactionOutput.setOrganizationId(feedbackInfoOutput.getOrganizationId());        pageData.put("organizationId",feedbackInfoOutput.getOrganizationId());        String m = null;        String n = null;        Integer sum = feedbackInfoOutput.getRunOneTimes() + feedbackInfoOutput.getRunManyTimes();        NumberFormat numberFormat = NumberFormat.getInstance();        numberFormat.setMaximumFractionDigits(0);        m = numberFormat.format((double)feedbackInfoOutput.getSatisfactionNumber()/(double)(sum)*100);        n = numberFormat.format((double)feedbackInfoOutput.getRunOneTimes()/(double)(sum)*100);        deptSatisfactionOutput.setTotal(sum);        deptSatisfactionOutput.setRunOnce(feedbackInfoOutput.getRunOneTimes());        deptSatisfactionOutput.setRunMany(feedbackInfoOutput.getRunManyTimes());        deptSatisfactionOutput.setSatisfactionNumber(feedbackInfoOutput.getSatisfactionNumber());        deptSatisfactionOutput.setNotSatisfactionNumber(feedbackInfoOutput.getUnSatisfactionNumber());        deptSatisfactionOutput.setSatisfactionRate(m+"%");        deptSatisfactionOutput.setImplementRate(n+"%");//      //满意数//      Integer satisfactionNumber = feedbackInfoMapper.selectSatisfactionNumber(pageData);//      if(satisfactionNumber == null || "".equals(satisfactionNumber)){//        deptSatisfactionOutput.setSatisfactionNumber(0);//      }else{//        deptSatisfactionOutput.setSatisfactionNumber(satisfactionNumber);//      }////      //跑一次//      Integer runOnce = feedbackInfoMapper.selectRunOnce(pageData);//      if(runOnce == null || "".equals(runOnce)){//        deptSatisfactionOutput.setRunOnce(0);//      }else{//        deptSatisfactionOutput.setRunOnce(runOnce);//      }////      //总数//      Integer total = feedbackInfoMapper.selectTotal(pageData);//      if(total == null || "".equals(total)){//        deptSatisfactionOutput.setTotal(0);//      }else{//        deptSatisfactionOutput.setTotal(total);//      }////      //不满意数、跑多次数//      Integer notSatisfactionNumber = feedbackInfoMapper.selectNotSatisfactionNumber(pageData);//      if(notSatisfactionNumber == null || "".equals(notSatisfactionNumber)){//        deptSatisfactionOutput.setNotSatisfactionNumber(0);//      }else{//        deptSatisfactionOutput.setNotSatisfactionNumber(notSatisfactionNumber);//      }//      Integer runMany = feedbackInfoMapper.selectRunMany(pageData);//      if(runMany == null || "".equals(runMany)){//        deptSatisfactionOutput.setRunMany(0);//      }else{//        deptSatisfactionOutput.setRunMany(feedbackInfoMapper.selectRunMany(pageData));//      }//        int satisfactionNumber1 = deptSatisfactionOutput.getSatisfactionNumber();//        int runOnce1 = deptSatisfactionOutput.getRunOnce();//        int total1 = deptSatisfactionOutput.getTotal();//        if(total1 != 0){//          NumberFormat numberFormat = NumberFormat.getInstance();//          numberFormat.setMaximumFractionDigits(0);//          String result1 = numberFormat.format((float)satisfactionNumber1/(float)total1*100);//          String result2 = numberFormat.format((float)runOnce1/(float)total1*100);//          //满意率//          deptSatisfactionOutput.setSatisfactionRate(result1+"%");//          //实现率//          deptSatisfactionOutput.setImplementRate(result2+"%");//          deptSatisfactionOutputList.add(deptSatisfactionOutput);//        }else{//          //满意率//          deptSatisfactionOutput.setSatisfactionRate(0+"%");//          //实现率//          deptSatisfactionOutput.setImplementRate(0+"%");          deptSatisfactionOutputList.add(deptSatisfactionOutput);        }    }    return deptSatisfactionOutputList;//    return deptSatisfactionOutputList.stream().//            collect(collectingAndThen(toCollection(() ->//                    new TreeSet<>(comparing(DeptSatisfactionOutput::getOrganizationName))), ArrayList::new));  }  /**   *   * @param response   * @param request   * @return   */  public String deptSatisfactionReportExport(HttpServletResponse response, HttpServletRequest request) throws Exception {    String title = "部门满意度报表";    String excelName = "部门满意度报表";    String[] rowsName = new String[]{"序号","部门","满意数","不满意数","满意率","跑一次","跑多次","实现率"};    List<Object[]> dataList = new ArrayList<Object[]>();    Object[] objects = null;    PageData pageData=new PageData(request);    List<DeptSatisfactionOutput> list=getDeptSatisfaction(pageData);    if(list.size()>0){      int i=1;      SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");      for(DeptSatisfactionOutput deptSatisfactionOutput:list){        objects = new Object[rowsName.length];        objects[0]=i;        objects[1]=deptSatisfactionOutput.getOrganizationName();        objects[2]=deptSatisfactionOutput.getSatisfactionNumber();        objects[3]=deptSatisfactionOutput.getNotSatisfactionNumber();        objects[4]=deptSatisfactionOutput.getSatisfactionRate();        objects[5]=deptSatisfactionOutput.getRunOnce();        objects[6]=deptSatisfactionOutput.getRunMany();        objects[7]=deptSatisfactionOutput.getImplementRate();        dataList.add(objects);        i++;      }    }    ExportExcel excel = new ExportExcel(title, rowsName, dataList, excelName);    return excel.export(response,request);  }  public List<FeedbackInfoOutput> selectUnstatis(PageData pageData){    List<FeedbackInfoOutput> feedbackInfoOutputs = feedbackInfoMapper.selectUnstatis(pageData);    return feedbackInfoOutputs;  }}