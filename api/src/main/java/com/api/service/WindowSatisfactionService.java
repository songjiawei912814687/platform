package com.api.service;import com.api.domain.output.FeedbackInfoOutput;import com.api.domain.output.SatisfactionOutput;import com.api.domain.output.WindowSatisfactionOutput;import com.api.mapper.mybatis.FeedbackInfoMapper;import com.api.mapper.mybatis.WindowMapper;import com.common.Enum.AppraiseStateEnum;import com.common.Enum.CompleteRateEnum;import com.common.Enum.SatisfactionEnum;import com.common.model.PageData;import com.common.response.ResponseResult;import com.common.utils.BigDecimalUtil;import com.google.common.collect.Lists;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.util.CollectionUtils;import javax.servlet.http.HttpServletRequest;import java.math.BigDecimal;import java.text.SimpleDateFormat;import java.util.List;/** * @author: Administrator */@Service@Slf4jpublic class WindowSatisfactionService {  @Autowired  private FeedbackInfoMapper feedbackInfoMapper;  public final SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");  /**   * 满意情况   * @return   */  public ResponseResult getEvaluation() {    List list = Lists.newArrayList();    List<FeedbackInfoOutput> feedbackInfoOutputList = feedbackInfoMapper.selectThisDay();    if(CollectionUtils.isEmpty(feedbackInfoOutputList)){      return ResponseResult.success(list);    }    String result = "";    for(FeedbackInfoOutput feedbackInfoOutput : feedbackInfoOutputList) {      SatisfactionOutput satisfactionOutput = new SatisfactionOutput();      satisfactionOutput.setEmployeeNo(feedbackInfoOutput.getEmployeesNo());      satisfactionOutput.setIsSatisfaction(feedbackInfoOutput.getSatisfactionName());      satisfactionOutput.setOneOrMany(feedbackInfoOutput.getCompleteRateName());      if(!feedbackInfoOutput.getAppraiseState().equals(AppraiseStateEnum.IS_APPRAISE.getCode())) {        continue;      }      if (feedbackInfoOutput.getSatisfaction().equals(SatisfactionEnum.SATISFIED.getCode())){          if(feedbackInfoOutput.getCompleteRate().equals(CompleteRateEnum.ONE.getCode())){            result = "工号" + satisfactionOutput.getEmployeeNo() + "被评价为" + satisfactionOutput.getIsSatisfaction() + "跑一次";          } else {            result  = "工号" + satisfactionOutput.getEmployeeNo() + "被评价为" + satisfactionOutput.getIsSatisfaction() + "跑多次";          }          list.add(result);        }      }    return ResponseResult.success(list);  }  public WindowSatisfactionOutput getWindow() {      WindowSatisfactionOutput windowSatisfactionOutput = new WindowSatisfactionOutput();      PageData pageData = new PageData();      //1.查询出当月办结的数量    try {      Integer allCount = feedbackInfoMapper.selectByThisMonth(pageData);      if(allCount == 0 ||allCount==null ){        windowSatisfactionOutput.setSatisfactionRate("100");        windowSatisfactionOutput.setImplementRate("100");        return windowSatisfactionOutput;      }      //查询出满意数      pageData.put("satis",SatisfactionEnum.SATISFIED.getCode().toString());      Integer satisCount = feedbackInfoMapper.selectByThisMonth(pageData);      pageData = new PageData();      pageData.put("complete",CompleteRateEnum.ONE.getCode().toString());      //查询出跑一次      Integer completeCount = feedbackInfoMapper.selectByThisMonth(pageData);      BigDecimal satisRate = BigDecimalUtil.div(satisCount.doubleValue(),allCount.doubleValue()).multiply(new BigDecimal(100));      BigDecimal compRate = BigDecimalUtil.div(completeCount.doubleValue(),allCount.doubleValue()).multiply(new BigDecimal(100));      windowSatisfactionOutput.setSatisfactionRate(satisRate.toString());      windowSatisfactionOutput.setImplementRate(compRate.toString());    } catch (Exception e) {      return windowSatisfactionOutput;    }    return windowSatisfactionOutput;    }}