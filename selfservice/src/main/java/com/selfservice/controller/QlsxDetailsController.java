package com.selfservice.controller;import com.common.model.PageData;import com.common.response.ResponseResult;import com.selfservice.service.QlsxDetailsService;import io.swagger.annotations.Api;import io.swagger.annotations.ApiImplicitParam;import io.swagger.annotations.ApiImplicitParams;import io.swagger.annotations.ApiOperation;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import javax.servlet.http.HttpServletRequest;/** * @author: Administrator */@RestController@RequestMapping(value = "QlsxInfo")@Api(value = "权力事项详情controller",description = "权力事项操作",tags = {"权力事项操作接口"})public class QlsxDetailsController {  @Autowired  private QlsxDetailsService qlsxDetailsService;  @Autowired  private HttpServletRequest request;  @GetMapping(value = "findPageList")  @ApiOperation("获取分页的权力事项内容")  @ApiImplicitParams({     @ApiImplicitParam(name = "qlName", value = "权力名称", required = false, dataType = "string", paramType = "query"),     @ApiImplicitParam(name = "contentInvolve", value = "涉及内容", required = false, dataType = "string", paramType = "query"),     @ApiImplicitParam(name = "hot", value = "热门事项", required = false, dataType = "int", paramType = "query"),     @ApiImplicitParam(name = "particles", value = "最小颗粒", required = false, dataType = "int", paramType = "query")  })  public ResponseResult findPageList(HttpServletRequest request) {    PageData pageData = new PageData(request);    return qlsxDetailsService.findPageList(pageData);  }  /**受理地址和时间**/  @ApiOperation("受理地址和时间")  @GetMapping(value = "/address")  public ResponseResult address(String qlFullId){    PageData pageData = new PageData(request);    return qlsxDetailsService.selectAddressInfo(pageData);  }  /**申请条件和限制**/  @ApiOperation("申请条件和限制")  @GetMapping(value = "/ConditionalAndLimit")  public ResponseResult ConditionalAndLimit(String qlFullId){    PageData pageData = new PageData(request);    return qlsxDetailsService.selectCountAndRequirement(pageData);  }  /**办理流程**/  @ApiOperation("办理流程")  @GetMapping(value = "/process")  public ResponseResult process(String qlFullId){    PageData pageData = new PageData(request);    return qlsxDetailsService.selectOutFlow(pageData);  }  /**法定依据**/  @ApiOperation("法定依据")  @GetMapping(value = "/statutoryBasis")  public ResponseResult statutoryBasis(String qlFullId){    PageData pageData = new PageData(request);    return qlsxDetailsService.selectLawbasis(pageData);  }  /**办事者权利和义务**/  @ApiOperation("办事者权利和义务")  @GetMapping(value = "/rightObligation")  public ResponseResult rightObligation(String qlFullId){    PageData pageData = new PageData(request);    return qlsxDetailsService.selectQLYW_Info(pageData);  }  /**业务审查规范**/  @ApiOperation("业务审查规范")  @GetMapping(value = "/businessReviewSpecification")  public ResponseResult businessReviewSpecification(String qlFullId){    PageData pageData = new PageData(request);    return qlsxDetailsService.selectSCYWGF_Info(pageData);  }  /**常见问题解答**/  @ApiOperation("常见问题解答")  @GetMapping(value = "/problemAnswer")  public ResponseResult problemAnswer(String qlFullId){    PageData pageData = new PageData(request);    return qlsxDetailsService.selectQA_Info(pageData);  }}